<?xml version="1.0" encoding="utf-8"?>
<resources>
    <!-- OLED 防烧屏 -->
    <bool name="config_enableBurnInProtection">true</bool>
    
    <!-- 指纹相关配置  -->
    <bool name="config_notifyClientOnFingerprintCancelSuccess">true</bool>
    <bool name="config_supportsScreenOffInDisplayFingerprint">true</bool>
    <bool name="config_supportsInDisplayFingerprint">true</bool>

    <!-- 允许用户调节的最大亮度等级 -->
    <integer name="config_screenBrightnessSettingMaximum">255</integer>

    <!-- 默认亮度等级 -->
    <integer name="config_screenBrightnessSettingDefault">102</integer>

    <!-- 允许用户调节的最小亮度等级 -->
    <integer name="config_screenBrightnessSettingMinimum">1</integer>

    <!-- 亮度传感器检测频率 单位:毫秒 -->
    <integer name="config_autoBrightnessLightSensorRate">150</integer>

    <!-- 可调节亮度等级 -->
    <integer-array name="config_screenBrightnessBacklight">
        <item>1</item>
        <item>255</item>
    </integer-array>

    <!-- 自动亮度是否启用 -->
    <bool name="config_automatic_brightness_available">true</bool>

    <!-- 自动亮度:屏幕亮度强度 -->
    <integer-array name="config_autoBrightnessDisplayValuesNits">
        <item>4</item>
        <item>5</item>
        <item>9</item>
        <item>16</item>
        <item>24</item>
        <item>31</item>
        <item>35</item>
        <item>48</item>
        <item>61</item>
        <item>83</item>
        <item>87</item>
        <item>87</item>
        <item>88</item>
        <item>88</item>
        <item>88</item>
        <item>89</item>
        <item>89</item>
        <item>89</item>
        <item>90</item>
        <item>90</item>
        <item>91</item>
        <item>91</item>
        <item>91</item>
        <item>92</item>
        <item>92</item>
        <item>93</item>
        <item>95</item>
        <item>96</item>
        <item>98</item>
        <item>98</item>
        <item>100</item>
        <item>101</item>
        <item>102</item>
        <item>104</item>
        <item>105</item>
        <item>107</item>
        <item>108</item>
        <item>110</item>
        <item>111</item>
        <item>113</item>
        <item>114</item>
        <item>116</item>
        <item>117</item>
        <item>119</item>
        <item>120</item>
        <item>142</item>
        <item>164</item>
        <item>190</item>
        <item>216</item>
        <item>243</item>
        <item>272</item>
        <item>302</item>
        <item>313</item>
        <item>386</item>
        <item>430</item>
        <item>440</item>
        <item>450</item>
        <item>455</item>
    </integer-array>
    
    <!-- 
        自动亮度:触发所需要光照强度
        该数组应与config_autoBrightnessDisplayValuesNits大小相同
     -->
    <integer-array name="config_autoBrightnessLevels">
        <item>1</item>
        <item>2</item>
        <item>4</item>
        <item>6</item>
        <item>8</item>
        <item>10</item>
        <item>15</item>
        <item>20</item>
        <item>25</item>
        <item>30</item>
        <item>35</item>
        <item>40</item>
        <item>45</item>
        <item>50</item>
        <item>55</item>
        <item>60</item>
        <item>65</item>
        <item>70</item>
        <item>75</item>
        <item>80</item>
        <item>85</item>
        <item>90</item>
        <item>95</item>
        <item>100</item>
        <item>120</item>
        <item>140</item>
        <item>160</item>
        <item>180</item>
        <item>200</item>
        <item>220</item>
        <item>240</item>
        <item>260</item>
        <item>280</item>
        <item>300</item>
        <item>320</item>
        <item>340</item>
        <item>360</item>
        <item>380</item>
        <item>400</item>
        <item>420</item>
        <item>440</item>
        <item>460</item>
        <item>480</item>
        <item>500</item>
        <item>700</item>
        <item>900</item>
        <item>1100</item>
        <item>1300</item>
        <item>1500</item>
        <item>1700</item>
        <item>1900</item>
        <item>2200</item>
        <item>2500</item>
        <item>3000</item>
        <item>3500</item>
        <item>4000</item>
        <item>4500</item>
    </integer-array>

    <!-- 屏幕亮度强度范围 -->
    <array name="config_screenBrightnessNits">
        <item>1.2</item>  <!-- index 1 -->
        <item>470.5</item>  <!-- index 2 -->
    </array>

    <!-- 亮度相关配置 -->
    <integer name="config_autoBrightnessBrighteningLightDebounce">2000</integer>
    <integer name="config_autoBrightnessDarkeningLightDebounce">4000</integer>
    <integer name="config_brightness_ramp_rate_fast">180</integer>
    <integer name="config_brightness_ramp_rate_slow">60</integer>
    <integer name="config_screenBrightnessDark">1</integer>
    <integer name="config_screenBrightnessDim">2</integer>
    <integer name="config_screenBrightnessForVrSettingDefault">86</integer>
    <integer name="config_screenBrightnessForVrSettingMinimum">79</integer>
    <integer name="config_screenBrightnessForVrSettingMaximum">255</integer>

    <!-- 无需解释 -->
    <bool name="config_haveHigherAspectRatioScreen">true</bool>

    <!-- If true, the screen can be rotated via the accelerometer in all 4
         rotations as the default behavior. -->
     <bool name="config_allowAllRotations">false</bool>

    <!-- Boolean indicating if current platform supports HFP inband ringing -->
     <bool name="config_bluetooth_hfp_inband_ringing_support">false</bool>

    <!-- Boolean indicating if current platform supports BLE peripheral mode -->
     <bool name="config_bluetooth_le_peripheral_mode_supported">false</bool>

    <!-- Whether camera shutter sound is forced or not  (country specific). -->
     <bool name="config_camera_sound_forced">true</bool>

    <!-- Flag specifying whether VoLTE should be available for carrier: independent of
         carrier provisioning. If false: hard disabled. If true: then depends on carrier
         provisioning, availability etc -->
     <bool name="config_carrier_volte_available">false</bool>
     <bool name="config_carrier_volte_tty_supported">true</bool>

    <!-- Flag specifying whether WFC over IMS should be available for carrier: independent of
         carrier provisioning. If false: hard disabled. If true: then depends on carrier
         provisioning, availability etc -->
     <bool name="config_carrier_wfc_ims_available">false</bool>

    <!-- Set to true to add links to Cell Broadcast app from Settings and MMS app. -->
     <bool name="config_cellBroadcastAppLinks">false</bool>

    <!-- Flag specifying whether VoLTE is available on device -->
     <bool name="config_device_volte_available">true</bool>

    <!-- Flag specifying whether VT is available on device -->
     <bool name="config_device_vt_available">true</bool>

    <!-- Flag specifying whether WFC over IMS is available on device -->
     <bool name="config_device_wfc_ims_available">false</bool>

    <!-- Whether the display blanks itself when transition from a doze to a non-doze state -->
     <bool name="config_displayBlanksAfterDoze">false</bool>

    <!-- If true, the doze component is not started until after the screen has been turned off
         and the screen off animation has been performed. -->
     <bool name="config_dozeAfterScreenOffByDefault">true</bool>
     <bool name="config_dozeAlwaysOnDisplayAvailable">true</bool>
     <bool name="config_dozeAlwaysOnEnabled">true</bool>
     <bool name="config_dozePulsePickup">false</bool>
     
    <!-- Flag specifying whether or not IMS will use the ImsResolver dynamically -->
     <bool name="config_dynamic_bind_ims">true</bool>
     <bool name="config_eap_sim_based_auth_supported">true</bool>

    <!--  Whether Multiuser UI should be shown -->
     <bool name="config_enableMultiUserUI">true</bool>

    <!-- Whether to enable network location overlay which allows network
         location provider to be replaced by an app at run-time. When disabled,
         only the config_networkLocationProviderPackageName package will be
         searched for network location provider, otherwise packages whose
         signature matches the signatures of config_locationProviderPackageNames
         will be searched, and the service with the highest version number will
         be picked. Anyone who wants to disable the overlay mechanism can set it
         to false.
    -->
     <bool name="config_enableNetworkLocationOverlay">false</bool>

    <!-- Whether WiFi display is supported by this device.
         There are many prerequisites for this feature to work correctly.
         Here are a few of them:
         * The WiFi radio must support WiFi P2P.
         * The WiFi radio must support concurrent connections to the WiFi display and
           to an access point.
         * The Audio Flinger audio_policy.conf file must specify a rule for the "r_submix"
           remote submix module.  This module is used to record and stream system
           audio output to the WiFi display encoder in the media server.
         * The remote submix module "audio.r_submix.default" must be installed on the device.
         * The device must be provisioned with HDCP keys (for protected content).
    -->
     <bool name="config_enableWifiDisplay">false</bool>

    <!-- Whether the display cutout region of the main built-in display should be forced to
         black in software (to avoid aliasing or emulate a cutout that is not physically existent).
    -->
     <bool name="config_fillMainBuiltInDisplayCutout">false</bool>

    <!-- Is the device capable of hot swapping an ICC Card -->
     <bool name="config_hotswapCapable">true</bool>

    <!-- Is the notification LED intrusive? Used to decide if there should be a disable option -->
     <bool name="config_intrusiveNotificationLed">true</bool>

    <!-- Indicate whether closing the lid causes the device to go to sleep and opening
         it causes the device to wake up.
         The default is false. -->
     <bool name="config_lidControlsSleep">true</bool>

    <!-- Should the pinner service pin the Camera application? -->
     <bool name="config_pinnerCameraApp">false</bool>

    <!-- Should the pinner service pin the Home application? -->
     <bool name="config_pinnerHomeApp">false</bool>

    <!-- Power Management: Specifies whether to decouple the auto-suspend state of the
         device from the display on/off state.
         When false, autosuspend_disable() will be called before the display is turned on
         and autosuspend_enable() will be called after the display is turned off.
         This mode provides best compatibility for devices using legacy power management
         features such as early suspend / late resume.
         When true, autosuspend_display() and autosuspend_enable() will be called
         independently of whether the display is being turned on or off.  This mode
         enables the power manager to suspend the application processor while the
         display is on.
         This resource should be set to "true" when a doze component has been specified
         to maximize power savings but not all devices support it.
         Refer to autosuspend.h for details.
    -->
     <bool name="config_powerDecoupleAutoSuspendModeFromDisplay">false</bool>

    <!-- Power Management: Specifies whether to decouple the interactive state of the
         device from the display on/off state.
         When false, setInteractive(..., true) will be called before the display is turned on
         and setInteractive(..., false) will be called after the display is turned off.
         This mode provides best compatibility for devices that expect the interactive
         state to be tied to the display state.
         When true, setInteractive(...) will be called independently of whether the display
         is being turned on or off.  This mode enables the power manager to reduce
         clocks and disable the touch controller while the display is on.
         This resource should be set to "true" when a doze component has been specified
         to maximize power savings but not all devices support it.
         Refer to power.h for details.
    -->
     <bool name="config_powerDecoupleInteractiveModeFromDisplay">false</bool>

    <!-- Boolean indicating whether the HWC setColorTransform function can be performed efficiently in hardware. -->
     <bool name="config_setColorTransformAccelerated">true</bool>

    <!-- Whether a software navigation bar should be shown. NOTE: in the future this may be
         autodetected from the Configuration. -->
     <bool name="config_showNavigationBar">true</bool>

    <!-- Flag indicating if the speed up audio on mt call code should be executed -->
     <bool name="config_speed_up_audio_on_mt_calls">false</bool>

    <!-- Whether the Unprocessed audio source supports the required frequency range and level -->
     <bool name="config_supportAudioSourceUnprocessed">false</bool>

    <!-- Whether device supports double tap to wake -->
     <bool name="config_supportDoubleTapWake">true</bool>

    <!-- Boolean indicating if current platform supports HFP inband ringing -->
     <bool name="config_supportSystemNavigationKeys">false</bool>

    <!-- Indicate whether to allow the device to suspend when the screen is off
         due to the proximity sensor.  This resource should only be set to true
         if the sensor HAL correctly handles the proximity sensor as a wake-up source.
         Otherwise, the device may fail to wake out of suspend reliably.
         The default is false. -->
     <bool name="config_suspendWhenScreenOffDueToProximity">false</bool>

    <!-- True if the device supports Sustained Performance Mode-->
     <bool name="config_sustainedPerformanceModeSupported">false</bool>

    <!-- Whether or not swipe up gesture's opt-in setting is available on this device -->
     <bool name="config_swipe_up_gesture_setting_available">true</bool>

    <!-- Config determines whether to update phone object when voice registration
         state changes. Voice radio tech change will always trigger an update of
         phone object irrespective of this config -->
     <bool name="config_switch_phone_on_voice_reg_state_change">false</bool>

    <!-- If this is true, the screen will come on when you unplug usb/power/whatever. -->
     <bool name="config_unplugTurnsOnScreen">true</bool>

    <!-- When true use the linux /dev/input/event subsystem to detect the switch changes
         on the headphone/microphone jack. When false use the older uevent framework. -->
     <bool name="config_useDevInputEventForAudioJack">true</bool>

    <!-- Enable video pause workaround when enabling/disabling the camera. -->
     <bool name="config_useVideoPauseWorkaround">false</bool>

    <!-- Set to true if the wifi display supports compositing content stored
         in gralloc protected buffers.  For this to be true, there must exist
         a protected hardware path for surface flinger to composite and send
         protected buffers to the wifi display video encoder.
         If this flag is false, we advise applications not to use protected
         buffers (if possible) when presenting content to a wifi display because
         the content may be blanked.
         This flag controls whether the {@link Display#FLAG_SUPPORTS_PROTECTED_BUFFERS}
         flag is set for wifi displays.
    -->
     <bool name="config_wifiDisplaySupportsProtectedBuffers">false</bool>

    <!-- Boolean indicating whether the wifi chipset has dual frequency band support -->
     <bool name="config_wifi_dual_band_support">true</bool>

    <!-- Boolean indicating if restoring network selection should be skipped -->
    <!-- The restoring is handled by modem if it is true-->
     <bool name="skip_restoring_network_selection">true</bool>

    <!-- Height of the status bar -->
     <dimen name="status_bar_height_portrait">24.0dip</dimen>

    <!-- The maximum range of gamma adjustment possible using the screen
         auto-brightness adjustment setting. -->
     <fraction name="config_autoBrightnessAdjustmentMaxGamma">300.0%</fraction>

    <!-- User activity timeout: Maximum screen dim duration as a percentage of screen off timeout.
    
         This resource is similar to config_maximumScreenDimDuration but the maximum
         screen dim duration is defined as a ratio of the overall screen off timeout
         instead of as an absolute value in milliseconds.  This is useful for reducing
         the dim duration when the screen off timeout is very short.
    
         When computing the screen dim duration, the power manager uses the lesser
         of the effective durations expressed by config_maximumScreenDimDuration and
         config_maximumScreenDimRatio.
    
         This value must be between 0% and 100%.  If the value is zero, the screen will not
         dim before the device goes to sleep.
    -->
     <fraction name="config_maximumScreenDimRatio">29.999996%</fraction>

    <!-- Operating volatage for bluetooth controller. 0 by default-->
     <integer name="config_bluetooth_operating_voltage_mv">0</integer>

    <!-- Slow brightness animation ramp rate in brightness units per second-->
     <integer name="config_longPressOnHomeBehavior">0</integer>

    <!--  Maximum number of supported users -->
     <integer name="config_multiuserMaximumUsers">4</integer>

    <!-- Default value for led color when battery is fully charged -->
     <integer name="config_notificationsBatteryFullARGB">0xFF00FF00</integer>

    <!-- Default value for led color when battery is low on charge -->
     <integer name="config_notificationsBatteryLowARGB">0xFFFF0000</integer>

    <!-- Default value for led color when battery is medium charged -->
     <integer name="config_notificationsBatteryMediumARGB">0xFFFFFF00</integer>

    <!-- Number of physical SIM slots on the device. This includes both eSIM and pSIM slots, and
         is not necessarily the same as the number of phones/logical modems supported by the device.
         For example, a multi-sim device can have 2 phones/logical modems, but 3 physical slots,
         or a single SIM device can have 1 phones/logical modems, but 2 physical slots (one eSIM
         and one pSIM) -->
     <integer name="config_num_physical_slots">1</integer>

    <!-- Screen brightness used to dim the screen while dozing in a very low power state.
         May be less than the minimum allowed brightness setting
         that can be set by the user. -->
     <integer name="config_screenBrightnessDoze">10</integer>

    <!-- Shutdown if the battery temperature exceeds (this value * 0.1) Celsius. -->
     <integer name="config_shutdownBatteryTemperature">599</integer>

    <!-- ComponentName of a dream to show whenever the system would otherwise have
         gone to sleep.  When the PowerManager is asked to go to sleep, it will instead
         try to start this dream if possible.  The dream should typically call startDozing()
         to put the display into a low power state and allow the application processor
         to be suspended.  When the dream ends, the system will go to sleep as usual.
         Specify the component name or an empty string if none.
         Note that doze dreams are not subject to the same start conditions as ordinary dreams.
         Doze dreams will run whenever the power manager is in a dozing state. -->
     <string name="config_dozeComponent">com.android.systemui/com.android.systemui.doze.DozeService</string>

    <!-- Regex of wired ethernet ifaces -->
     <string name="config_ethernet_iface_regex">eth\\d</string>

    <!-- ImsService package name to bind to by default, if config_dynamic_bind_ims is true -->
     <string name="config_ims_package">com.mediatek.ims</string>

    <!-- MMS user agent string -->
     <string name="config_mms_user_agent">Android-Mms/0.1</string>

    <!-- MMS user agent prolfile url -->
     <string name="config_mms_user_agent_profile_url">http://www.google.com/oha/rdf/ua-profile-kila.xml</string>
     <string name="config_qualified_networks_service_package">com.android.phone</string>

    <!-- Configure wifi tcp buffersizes in the form:
         rmem_min,rmem_def,rmem_max,wmem_min,wmem_def,wmem_max -->
     <string name="config_wifi_tcp_buffers">524288,1048576,4194304,262144,524288,3670016</string>
     <string name="config_wlan_data_service_package">com.android.phone</string>
     <string name="config_wlan_network_service_package">com.android.phone</string>

    <!-- Vibrator pattern for a very short but reliable vibration for soft keyboard tap -->
    <integer-array name="config_keyboardTapVibePattern">
        <item>40</item>
    </integer-array>

    <!-- Vibrator pattern for feedback about a long screen/key press -->
    <integer-array name="config_longPressVibePattern">
        <item>0</item>
        <item>1</item>
        <item>20</item>
        <item>21</item>
    </integer-array>

    <!-- Array of ConnectivityManager.TYPE_xxxx values allowable for tethering -->
    <!-- Common options are [1, 4] for TYPE_WIFI and TYPE_MOBILE_DUN or
    <!== [0,1,5,7] for TYPE_MOBILE, TYPE_WIFI, TYPE_MOBILE_HIPRI and TYPE_BLUETOOTH -->
    <integer-array name="config_tether_upstream_types">
        <item>1</item>
        <item>0</item>
        <item>5</item>
        <item>7</item>
    </integer-array>

    <!-- Vibrator pattern for feedback about touching a virtual key -->
    <integer-array name="config_virtualKeyVibePattern">
        <item>0</item>
        <item>10</item>
        <item>20</item>
        <item>30</item>
    </integer-array>

    <!-- Default list of files pinned by the Pinner Service -->
    <string-array name="config_defaultPinnerServiceFiles">
        <item>/data/dalvik-cache/arm64/system@framework@boot.oat</item>
        <item>/data/dalvik-cache/arm/system@framework@boot.oat</item>
        <item>/data/dalvik-cache/arm64/system@framework@services.jar@classes.dex</item>
        <item>/data/dalvik-cache/arm/system@framework@services.jar@classes.dex</item>
        <item>/system/framework/arm64/boot.oat</item>
        <item>/system/framework/arm/boot.oat</item>
        <item>/system/framework/oat/arm64/services.odex</item>
        <item>/system/framework/oat/arm/services.odex</item>
        <item>/system/framework/arm64/boot-framework.oat</item>
        <item>/system/framework/arm/boot-framework.oat</item>
        <item>/system/framework/arm64/boot-core-libart.oat</item>
        <item>/system/framework/arm/boot-core-libart.oat</item>
        <item>/system/lib64/libRScpp.so</item>
        <item>/system/lib64/libRS.so</item>
        <item>/system/lib64/libRS_internal.so</item>
        <item>/system/lib64/libbcinfo.so</item>
        <item>/system/lib64/libRSDriver.so</item>
        <item>/system/lib64/libRSCpuRef.so</item>
        <item>/system/lib64/libblas.so</item>
    </string-array>

    <!-- List of regexpressions describing the interface (if any) that represent tetherable
         bluetooth interfaces.  If the device doesn't want to support tethering over bluetooth this
         should be empty. -->
    <string-array name="config_tether_bluetooth_regexs">
        <item>bt-pan</item>
        <item>bt-dun</item>
    </string-array>

    <!-- List of regexpressions describing the interface (if any) that represent tetherable
         USB interfaces.  If the device doesn't want to support tething over USB this should
         be empty.  An example would be "usb.*" -->
    <string-array name="config_tether_usb_regexs">
        <item>rndis\\d</item>
    </string-array>

    <!-- List of regexpressions describing the interface (if any) that represent tetherable
         Wifi interfaces.  If the device doesn't want to support tethering over Wifi this
         should be empty.  An example would be "softap.*" -->
    <string-array name="config_tether_wifi_regexs">
        <item>ap\\d</item>
    </string-array>

    <!-- An Array of "[Connection name],[ConnectivityManager.TYPE_xxxx],
         [associated radio-type],[priority],[restoral-timer(ms)],[dependencyMet]  -->
    <!-- the 5th element "resore-time" indicates the number of milliseconds to delay
         before automatically restore the default connection.  Set -1 if the connection
         does not require auto-restore. -->
    <!-- the 6th element indicates boot-time dependency-met value. -->
    <string-array name="networkAttributes">
        <item>wifi,1,1,1,-1,true</item>
        <item>mobile,0,0,0,-1,true</item>
        <item>mobile_mms,2,0,2,300000,true</item>
        <item>mobile_supl,3,0,2,60000,true</item>
        <item>mobile_dun,4,0,2,60000,true</item>
        <item>mobile_hipri,5,0,3,60000,true</item>
        <item>mobile_fota,10,0,2,60000,true</item>
        <item>mobile_ims,11,0,-1,-1,true</item>
        <item>mobile_cbs,12,0,2,60000,true</item>
        <item>bluetooth,7,7,2,-1,true</item>
        <item>ethernet,9,9,4,-1,true</item>
        <item>wifi_p2p,13,1,0,-1,true</item>
        <item>mobile_ia,14,0,2,-1,true</item>
        <item>mobile_emergency,15,0,2,-1,true</item>
        <item>mobile_dm,20,0,3,60000,true</item>
        <item>mobile_wap,21,0,3,60000,true</item>
        <item>mobile_net,22,0,3,60000,true</item>
        <item>mobile_cmmail,23,0,3,60000,true</item>
        <item>mobile_rcse,24,0,3,60000,true</item>
        <item>mobile_xcap,25,0,3,60000,true</item>
        <item>mobile_rcs,26,0,3,60000,true</item>
        <item>mobile_bip,27,0,3,60000,true</item>
        <item>mobile_vsim,28,0,-1,60000,true</item>
        <item>mobile_preempt,29,0,9,60000,true</item>
        <item>wifi_slave,30,1,1,-1,true</item>
    </string-array>

    <!-- This string array should be overridden by the device to present a list of radio
         attributes.  This is used by the connectivity manager to decide which networks can coexist
         based on the hardware -->
    <!-- An Array of "[ConnectivityManager connectionType],
                  [# simultaneous connection types]"  -->
    <string-array name="radioAttributes">
        <item>1,1</item>
        <item>0,1</item>
        <item>7,1</item>
        <item>9,1</item>
    </string-array>

    <!-- Enables or disables fading edges when marquee is enabled in TextView.
         Off by default, since the framebuffer readback used to implement the
         fading edges is prohibitively expensive on most GPUs. -->
    <bool name="config_ui_enableFadingMarquee">false</bool>

</resources>